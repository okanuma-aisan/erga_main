<launch>
  <!-- This launchfile should bring up a node that broadcasts a ros image
       transport on /webcam/image_raw -->

  <arg name="DEVICE" default="/dev/video0"/>
  <arg name="camera_info_file" default="camera_info_dot3.ini"/>
  <!-- The GStreamer framerate needs to be an integral fraction -->
  <arg name="FPS" default="30/1"/>
  <arg name="PUBLISH_FRAME" default="false"/>
  <arg name="use_sensor_data_qos" default="false"/>


  <node namespace="v4l" name="gscam_driver_v4l" pkg="gscam" exec="gscam_node" output="screen">
    <param name="camera_name" value="default"/>
    <param name="camera_info_url" value="package://gscam/examples/$(var camera_info_file)"/>
    <param name="gscam_config" value="v4l2src device=$(var DEVICE) ! video/x-raw,framerate=$(var FPS) ! videoconvert"/>
    <!--param name="frame_id" value="sensor_kit_base_link"/-->
    <!--param name="frame_id" value="camera0/camera_link"/-->
    <param name="frame_id" value="traffic_light_right_camera/camera_link"/>
    <!--param name="frame_id" value="base_link"/-->
    <param name="use_sensor_data_qos" value="$(var use_sensor_data_qos)"/>

    <param name="sync_sink" value="true"/>
  </node>

  <node if="$(var PUBLISH_FRAME)" name="v4l_transform" pkg="tf2_ros" exec="static_transform_publisher" args="1 2 3 0 -3.141 0 /world /v4l_frame"/>
</launch>
